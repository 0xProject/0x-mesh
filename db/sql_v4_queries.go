package db

const v4OrdersSchema = `
CREATE TABLE IF NOT EXISTS ordersv4 (
	hash                     TEXT UNIQUE NOT NULL,
	chainID                  TEXT NOT NULL,
	exchangeAddress          TEXT NOT NULL,
	makerToken               TEXT NOT NULL,
	takerToken               TEXT NOT NULL,
	makerAmount              TEXT NOT NULL,
	takerAmount              TEXT NOT NULL,
	takerTokenFeeAmount      TEXT NOT NULL,
	maker                    TEXT NOT NULL,
	taker                    TEXT NOT NULL,
	sender                   TEXT NOT NULL,
	feeRecipient             TEXT NOT NULL,
	pool                     TEXT NOT NULL,
	expiry                   TEXT NOT NULL,
	salt                     TEXT NOT NULL,
	signature                TEXT NOT NULL,
	lastUpdated              DATETIME NOT NULL,
	fillableTakerAssetAmount TEXT NOT NULL,
	isRemoved                BOOLEAN NOT NULL,
	isPinned                 BOOLEAN NOT NULL,
	isUnfillable             BOOLEAN NOT NULL,
	isExpired                BOOLEAN NOT NULL,
	lastValidatedBlockNumber TEXT NOT NULL,
	lastValidatedBlockHash   TEXT NOT NULL,
	keepCancelled            BOOLEAN NOT NULL,
	keepExpired              BOOLEAN NOT NULL,
	keepFullyFilled          BOOLEAN NOT NULL,
	keepUnfunded             BOOLEAN NOT NULL
);
`
const insertOrderQueryV4 = `INSERT INTO ordersv4 (
	hash,
	chainID,
	exchangeAddress,
	makerToken,
	takerToken,
	makerAmount,
	takerAmount,
	takerTokenFeeAmount,
	maker,
	taker,
	sender,
	feeRecipient,
	pool,
	expiry,
	salt,
	signature,
	lastUpdated,
	fillableTakerAssetAmount,
	isRemoved,
	isPinned,
	isUnfillable,
	isExpired,
	lastValidatedBlockNumber,
	lastValidatedBlockHash,
	keepCancelled,
	keepExpired,
	keepFullyFilled,
	keepUnfunded
) VALUES (
	:hash,
	:chainID,
	:exchangeAddress,
	:makerToken,
	:takerToken,
	:makerAmount,
	:takerAmount,
	:takerTokenFeeAmount,
	:maker,
	:taker,
	:sender,
	:feeRecipient,
	:pool,
	:expiry,
	:salt,
	:signature,
	:lastUpdated,
	:fillableTakerAssetAmount,
	:isRemoved,
	:isPinned,
	:isUnfillable,
	:isExpired,
	:lastValidatedBlockNumber,
	:lastValidatedBlockHash,
	:keepCancelled,
	:keepExpired,
	:keepFullyFilled,
	:keepUnfunded
) ON CONFLICT DO NOTHING
`
