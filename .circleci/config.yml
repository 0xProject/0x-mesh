version: 2
jobs:
  build:
    environment:
      BASH_ENV: ~/.nvm/nvm.sh
    docker:
      - image: circleci/golang:1.12.9
      - image: 0xorg/mesh-ganache-cli:6.0.0
    working_directory: /go/src/github.com/0xProject/0x-mesh
    steps:
      - checkout
      - run:
          name: Install dependencies for Google Chrome
          command: sudo apt-get update && sudo apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget --fix-missing
      - run:
          name: Install Google Chrome
          type: shell
          command: |
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            dpkg -i google-chrome-stable_current_amd64.deb; apt-get -fy install
      - run:
          name: Install dep
          command: curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
      - run:
          name: Install nvm
          command: curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
      - run:
          name: Configure nvm
          command: export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      - run:
          name: Install Node v11
          command: nvm install 11
      - run: node --version
      - run:
          name: Install yarn
          command: npm i -g yarn@^1.15
      - run:
          name: Install dependencies
          command: make deps-no-lockfile
      - run:
          name: Install Go linter
          command: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.16.0
      - run:
          name: Run Go linter
          command: golangci-lint run
      - run:
          name: Run Go tests
          command: make test-go
      - run:
          name: Run WebAssembly tests in Node.js
          command: make test-wasm-node
      - run:
          name: Run WebAssembly tests in a headless browser
          command: make test-wasm-browser
      - run:
          name: Run integration tests
          command: make test-integration
      - run:
          name: Test installing Mesh without CGO
          command: CGO_ENABLED=0 go install ./...
      - run:
          name: Install TS RPC client dependencies
          command: cd rpc/clients/typescript && yarn install
      - run:
          name: Run TS RPC client linter
          command: cd rpc/clients/typescript && yarn lint
      - run:
          name: Build TS RPC client
          command: cd rpc/clients/typescript && yarn build
      - run:
          name: Run TS RPC client tests
          command: cd rpc/clients/typescript && yarn test

